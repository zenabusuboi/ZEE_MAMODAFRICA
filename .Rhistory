# load required libraries
library(tidyverse)
# load required libraries
library(tidyverse)
tidyverse::tidyverse_packages()#library(extraDistr)
# Load the data from the CSV file
# actual observed data from Ghana we want to fit to
GHAfitDat <- read_csv("C:\\Users\\Z\\Documents\\PhD affairs\\SWISS TPH\\DATA\\GHAfitDat_20231016_zenabu.csv")
GHAfitDat <- GHAfitDat %>% rename(year = Year) %>%
mutate(sd=(UCI-LCI)/3.92) # use lower and upper CI with the cutoff to calculate sd
library(tidyverse)
sessionInfo()
install.packages("tidyverse")
Delta_t = 1
T = 10
Time = seq(0,T,by=Delta_t)
Nt = length(Time)
S = rep(NA,Nt) # Scusceptible comp
I = rep(-1,Nt) # Infected comp
b = 0 #recruitment rate
beta = 0.1 # transmission rate
d = 0.01 # death rate
h=0.2
mu=0.05
S[1]=100
I[1]=1
S[t+1] = S[t]+Delta_t*(b-beta*S[t]*I[t]-d*S[t])
for (t in 1:(Nt-1)) {
S[t+1] = S[t]+Delta_t*(b-beta*S[t]*I[t]-d*S[t])
I[t+1] = I[t]+Delta_t*(beta*S[t]*I[t]-(d+mu+h)*I[t])
}
S
Delta_t = 0.1
for (t in 1:(Nt-1)) {
S[t+1] = S[t]+Delta_t*(b-beta*S[t]*I[t]-d*S[t])
I[t+1] = I[t]+Delta_t*(beta*S[t]*I[t]-(d+mu+h)*I[t])
}
S
plot(Time,S,type = 'l')
Time = seq(0,T,by=Delta_t)
for (t in 1:(Nt-1)) {
S[t+1] = S[t]+Delta_t*(b-beta*S[t]*I[t]-d*S[t])
I[t+1] = I[t]+Delta_t*(beta*S[t]*I[t]-(d+mu+h)*I[t])
}
S
plot(Time,S,type = 'l')
Delta_t = 0.1
T = 10
Time = seq(0,T,by=Delta_t)
Nt = length(Time)
S = rep(NA,Nt) # Scusceptible comp
I = rep(-1,Nt) # Infected comp
b = 0 #recruitment rate
beta = 0.1 # transmission rate
d = 0.01 # death rate
h=0.2
mu=0.05
S[1]=100
I[1]=1
for (t in 1:(Nt-1)) {
S[t+1] = S[t]+Delta_t*(b-beta*S[t]*I[t]-d*S[t])
I[t+1] = I[t]+Delta_t*(beta*S[t]*I[t]-(d+mu+h)*I[t])
}
S
plot(Time,S,type = 'l')
plot(Time,I,type = 'l')
R0=beta*b/(d*(d+mu+h))
T = 100
Time = seq(0,T,by=Delta_t)
Nt = length(Time)
R0=beta*b/(d*(d+mu+h))
R0
b = 0.2 #recruitment rate
R0=beta*b/(d*(d+mu+h))
b = 0.01 #recruitment rate
R0=beta*b/(d*(d+mu+h))
b = 0.05 #recruitment rate
R0=beta*b/(d*(d+mu+h))
for (t in 1:(Nt-1)) {
S[t+1] = S[t]+Delta_t*(b-beta*S[t]*I[t]-d*S[t])
I[t+1] = I[t]+Delta_t*(beta*S[t]*I[t]-(d+mu+h)*I[t])
}
S
plot(Time,S,type = 'l')
plot(Time,I,type = 'l')
beta = 0.01 # transmission rate
R0=beta*b/(d*(d+mu+h))
for (t in 1:(Nt-1)) {
S[t+1] = S[t]+Delta_t*(b-beta*S[t]*I[t]-d*S[t])
I[t+1] = I[t]+Delta_t*(beta*S[t]*I[t]-(d+mu+h)*I[t])
}
plot(Time,S,type = 'l')
plot(Time,I,type = 'l')
plot(S,I)
library(tidyverse)
library(sf)
install.packages("sf")
library(sf)
library(tidyverse)
library(ggplot2)
library(tidyverse) #load tidyverse library
rm(list=ls()) #clean the environment
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) #sets the folder where
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
mutate(test_total = test_u5+test_ov5)
View(routine_data)
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
mutate(test_total = test_u5+test_ov5)
write_csv(clean_routine_data, './clean_routine_data.csv') #save cleaned dataset
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
mutate(test_total = test_u5 + test_ov5)
rlang::last_trace()
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
routine_data
test_u5
routine_data <- read_csv('./routine_data.csv',sep=";") #load routine dataset
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
routine_data$test_u5<- as.integer(test_u5)
routine_data$test_u5 <- as.numeric(test_u5)
routine_data$test_u5 <- as.integer(routine_data$test_u5)
routine_data$test_u5 <- as.numeric(routine_data$test_u5)
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
mutate(test_total = test_u5 + test_ov5)
View(clean_routine_data)
write_csv(clean_routine_data, './clean_routine_data.csv') #save cleaned dataset
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
test_u5 <- as.numeric(test_u5)%>%
mutate(test_total = test_u5 + test_ov5)
library(tidyverse) #load tidyverse library
rm(list=ls()) #clean the environment
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) #sets the folder where
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
View(routine_data)
class(test_u5)
routine_data$test_u5
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
routine_data$test_u5 <- as.numeric(routine_data$test_u5)%>%
mutate(test_total = test_u5 + test_ov5)
# test_u5 is a character not numeric. convert
routine_data$test_u5 <- as.numeric(routine_data$test_u5)
routine_data$test_u5
library(tidyverse) #load tidyverse library
rm(list=ls()) #clean the environment
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) #sets the folder where
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
View(routine_data)
# test_u5 is a character not numeric. convert
routine_data$test_u5 <- as.numeric(routine_data$test_u5)
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
# routine_data$test_u5 <- as.numeric(routine_data$test_u5)%>%
mutate(test_total = test_u5 + test_ov5)
View(clean_routine_data)
class(routine_data$test_u5)
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
class(routine_data$test_u5)
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
# routine_data$test_u5 <- as.numeric(routine_data$test_u5)%>%
mutate(test_total = test_u5 + test_ov5) %>%
filter(test_u5, na.rm = TRUE)
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
# test_u5 is a character not numeric. convert
routine_data$test_u5 <- as.numeric(routine_data$test_u5)
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
mutate(test_total = test_u5 + test_ov5) %>%
filter(test_u5, na.rm = TRUE)
#example of tidyverse
clean_routine_data <- routine_data %>% #pipe operator
mutate(test_total = test_u5 + test_ov5) %>%
filter(Admin1, na.rm = TRUE)
View(clean_routine_data)
routine_data %>% filter(if_any(everything(), is.na))
routine_data %>%
filter(if_any(everything(), is.na)) %>%
drop_na()
View(routine_data)
routine_data %>%
# filter(if_any(everything(), is.na)) %>%
drop_na()
routine_data <- routine_data %>%
drop_na() # drop all rows with NA
View(routine_data)
my_routine_data <- routine_data %>%
my_routine_data$test_u5 <- as.numeric(routine_data$test_u5)
my_routine_data <- routine_data %>%
my_routine_data$test_u5 <- as.numeric(my_routine_data$test_u5)
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
my_routine_data <- routine_data
clean_routine_data <- my_routine_data %>%
my_routine_data$test_u5 <- as.numeric(my_routine_data$test_u5)
clean_routine_data <- my_routine_data %>%
my_routine_data$test_u5 <- as.numeric(my_routine_data$test_u5) %>%
drop_na() # drop all rows with NA
# test_u5 is a character not numeric. convert
my_routine_data$test_u5 <- as.numeric(my_routine_data$test_u5)
clean_routine_data <- my_routine_data %>%
drop_na() # drop all rows with NA
clean_routine_data <- my_routine_data %>%
drop_na() %>%# drop all rows with NA
mutate(test_total = test_u5 + test_ov5)
View(clean_routine_data)
View(routine_data)
my_routine_data <- routine_data %>%
unique(month)
my_routine_data <- routine_data %>%
unique(my_routine_data$month)
unique(my_routine_data$month)
unique(my_routine_data$year)
replace(my_routine_data$year, c(18, 3018),2018)
unique(my_routine_data$Admin1)
replace(my_routine_data$Admin1, c("Kujaleq", "Norteast"), c("Kujalleq", "Northeast"))
unique(my_routine_data$Admin1)
rename(my_routine_data$Admin1, "Kujaleq" == "Kujalleq")
replace(my_routine_data$Admin1, c("Kujaleq"), c("Kujalleq"))
unique(my_routine_data$Admin1)
class(my_routine_data$test_u5)
#MY DATA CLEANING
my_routine_data <- routine_data
#MY DATA CLEANING
my_routine_data <- routine_data
class(my_routine_data$test_u5)
unique(my_routine_data$test_u5)
#test
#group <- c("O", "27O")
gsub("O", "0", my_routine_data$test_u5)
#MY DATA CLEANING
my_routine_data <- routine_data
write_csv(clean_routine_data, './clean_routine_data.csv') #save cleaned dataset
# year
unique(my_routine_data$year)
replace(my_routine_data$year, c(18, 3018),2018)
#test
#group <- c("O", "27O")
gsub("O", "0", my_routine_data$test_u5)
gsub("27O", "270", my_routine_data$test_u5)
View(my_routine_data)
gsub(c("O" ,"27O"), c("0","270"), my_routine_data$test_u5)
# year
unique(my_routine_data$year)
replace(my_routine_data$year, c(18, 3018),2018)
# year
unique(my_routine_data$year)
#replace(my_routine_data$year, c(18, 3018),2018)
my_routine_data$year[my_routine_data$year == "18" | my_routine_data$year == "3018"] <- 2018
# year
unique(my_routine_data$year)
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
#MY DATA CLEANING
my_routine_data <- routine_data
# year
unique(my_routine_data$year)
my_routine_data$year[my_routine_data$year == "18" | my_routine_data$year == "3018"] <- 2018
unique(my_routine_data$year)
str(my_routine_data$hf)
#unique(my_routine_data$month)
str(my_routine_data$Admin1)
str(my_routine_data$month)
str(my_routine_data$year)
str(my_routine_data$test_u5)
str(my_routine_data$conf_u5)
str(my_routine_data$test_ov5)
str(my_routine_data$conf_ov5)
gsub("O", "0", my_routine_data$test_u5)
gsub(c("27O"), c("270"), my_routine_data$test_u5)
my_routine_data %>%
filter(if_any(everything(), is.na)) %>% #shows all rows with NA
# test_u5 is a character not numeric. convert to numeric
my_routine_data$test_u5 <- as.numeric(my_routine_data$test_u5)
my_routine_data %>%
filter(if_any(everything(), is.na)) #shows all rows with NA
# test_u5 is a character not numeric. convert to numeric
my_routine_data$test_u5 <- as.numeric(my_routine_data$test_u5)
clean_routine_data <- my_routine_data %>%
drop_na() %>%# drop all rows with NA
mutate(test_total = test_u5 + test_ov5)
row.names(my_routine_data)
replace(my_routine_data$Admin1, "Kujaleq", "Kujalleq")
unique(my_routine_data$Admin1)
my_routine_data$Admin1[my_routine_data$Admin1 == "Kujaleq"] <- "Kujalleq"
unique(my_routine_data$Admin1)
#-------------------------inspect and make corrections to cols below
#conf_u5 -------
#---------------------------------------------
my_routine_data %>%
filter(if_any(everything(), is.na)) #shows all rows with NA
my_routine_data$Admin1[my_routine_data$Admin1 == "Norteast"] <- "Northeast"
my_routine_data$Admin1[my_routine_data$Admin1 == "sermersooq"] <- "Sermersooq"
unique(my_routine_data$Admin1)
my_routine_data$Admin1[my_routine_data$Admin1 == "Norteast"] <- "Northeast"
unique(my_routine_data$Admin1)
my_routine_data$Admin1[my_routine_data$Admin1 == "Norteast Greenland National Park"] <- "Northeast Greenland National Park"
unique(my_routine_data$Admin1)
my_routine_data$conf_u5>my_routine_data$conf_u5
my_routine_data$conf_u5>my_routine_data$test_u5
# test_u5 is a character not numeric. convert to numeric
my_routine_data$test_u5 <- as.numeric(my_routine_data$test_u5)
my_routine_data$conf_u5>my_routine_data$test_u5
#test_u5
my_routine_data$test_u5 <- gsub("O", "0", my_routine_data$test_u5)
my_routine_data$test_u5 <- gsub(c("27O"), c("270"), my_routine_data$test_u5)
clean_routine_data <- my_routine_data %>%
drop_na() %>%# drop all rows with NA
mutate(test_total = test_u5 + test_ov5) %>%
replace(Admin1, which(Admin1 == "Kujaleq","Kujalleq"))
clean_routine_data <- my_routine_data %>%
drop_na() %>%# drop all rows with NA
mutate(test_total = test_u5 + test_ov5) %>%
replace(Admin1, which(Admin1 == "Kujaleq","Kujalleq")) %>%
replace(Admin1, which(Admin1 == "Norteast Greenland National Park","Northeast Greenland National Park")) %>%
#filter out all rows with more tests than confirmed cases
write_csv(clean_routine_data, './clean_routine_data.csv') #save cleaned dataset
clean_routine_data <- my_routine_data %>%
drop_na() %>%# drop all rows with NA
mutate(test_total = test_u5 + test_ov5)
#-------------------------------------------- tidyverse-
my_routine_data %>%
filter(if_any(everything(), is.na)) #shows all rows with NA
lean_routine_data <- my_routine_data %>%
drop_na()
clean_routine_data <- my_routine_data %>%
drop_na() %>%# drop all rows with NA
test_u5 <- as.numeric(test_u5)
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
routine_data <- read.csv('./routine_data.csv',sep=";") #load routine dataset
clean_routine_data <- my_routine_data %>%
drop_na() %>%# drop all rows with NA
test_u5 <- gsub("O", "0", test_u5)
routine_data <- read.csv('./routine_data.csv',sep=";",na.strings = c("", "NA", -9999)) #load routine dataset
clean_routine_data <- my_routine_data
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5)
View(clean_routine_data)
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5)
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5) %>% #drop NAs
filter(test_u5>conf_u5,
test_ov5>conf_ov5)
View(clean_routine_data)
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5) %>% #drop NAs
filter(test_u5>conf_u5,
test_ov5>conf_ov5) %>% #filter only rows where test cases are more than confirmed cases
case_when(Admin1 == 'Norteast Greenland National Park'~'Northeast Greenland National Park',
Admin1 == 'Kujaleq'~'Kujalleq',
Admin1 == 'sermersooq'~'Sermersooq')
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5) %>% #drop NAs
filter(test_u5>conf_u5,
test_ov5>conf_ov5) %>% #filter only rows where test cases are more than confirmed cases
case_when(Admin1 == 'Norteast Greenland National Park'~'Northeast Greenland National Park',
Admin1 == 'Kujaleq'~'Kujalleq',
Admin1 == 'sermersooq'~'Sermersooq',
TRUE~Admin1)
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5) %>% #drop NAs
filter(test_u5>conf_u5,
test_ov5>conf_ov5) %>% #filter only rows where test cases are more than confirmed cases
mutate(case_when(Admin1 == 'Norteast Greenland National Park'~'Northeast Greenland National Park',
Admin1 == 'Kujaleq'~'Kujalleq',
Admin1 == 'sermersooq'~'Sermersooq',
TRUE~Admin1) %>%
month = factor(month,
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5) %>% #drop NAs
filter(test_u5>conf_u5,
test_ov5>conf_ov5) %>% #filter only rows where test cases are more than confirmed cases
mutate(case_when(Admin1 == 'Norteast Greenland National Park'~'Northeast Greenland National Park',
Admin1 == 'Kujaleq'~'Kujalleq',
Admin1 == 'sermersooq'~'Sermersooq',
TRUE~Admin1),
month = factor(month,
levels = month.abb),
year = case_when(year == 3018 ~ 2018,
year == 18 ~ 2018,
TRUE ~ 2018))
View(clean_routine_data)
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5) %>% #drop NAs
filter(test_u5>conf_u5,
test_ov5>conf_ov5) %>% #filter only rows where test cases are more than confirmed cases
mutate(Admin1 = case_when(Admin1 == 'Norteast Greenland National Park'~'Northeast Greenland National Park',
Admin1 == 'Kujaleq'~'Kujalleq',
Admin1 == 'sermersooq'~'Sermersooq',
TRUE~Admin1),
month = factor(month,
levels = month.abb),
year = case_when(year == 3018 ~ 2018,
year == 18 ~ 2018,
TRUE ~ 2018),
date_tested = make_date(year = year, month = month),
across(c(test_u5, test_ov5, conf_u5, conf_ov5), ~as.integer(gsub("O",0,.)))
clean_routine_data <- my_routine_data %>%
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5) %>% #drop NAs
filter(test_u5>conf_u5,
test_ov5>conf_ov5) %>% #filter only rows where test cases are more than confirmed cases
mutate(Admin1 = case_when(Admin1 == 'Norteast Greenland National Park'~'Northeast Greenland National Park',
Admin1 == 'Kujaleq'~'Kujalleq',
Admin1 == 'sermersooq'~'Sermersooq',
TRUE~Admin1),
month = factor(month,
levels = month.abb),
year = case_when(year == 3018 ~ 2018,
year == 18 ~ 2018,
TRUE ~ 2018),
date_tested = make_date(year = year, month = month),
across(c(test_u5, test_ov5, conf_u5, conf_ov5),~as.integer(gsub("O",0,.))),
test_total = test_u5+test_ov5,
conf_total = conf_u5+conf_ov5)
View(clean_routine_data)
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5) %>% #drop NAs
filter(test_u5>conf_u5,
test_ov5>conf_ov5) %>% #filter only rows where test cases are more than confirmed cases
mutate(Admin1 = case_when(Admin1 == 'Norteast Greenland National Park'~'Northeast Greenland National Park',
Admin1 == 'Kujaleq'~'Kujalleq',
Admin1 == 'sermersooq'~'Sermersooq',
TRUE~Admin1),
month = factor(month,
levels = month.abb),
year = case_when(year == 3018 ~ 2018,
year == 18 ~ 2018,
TRUE ~ 2018),
date_tested = make_date(year = year, month = month),
across(c(test_u5, test_ov5, conf_u5, conf_ov5),~as.integer(gsub("O",0,.))),
test_total = test_u5+test_ov5,
conf_total = conf_u5+conf_ov5) %>%
group_by(Admin1, date_tested)
View(clean_routine_data)
View(clean_routine_data)
str(my_routine_data$conf_ov5)
str(my_routine_data$conf_ov5)
str(my_routine_data$conf_ov5)
#----------------------------------------------
clean_routine_data <- my_routine_data %>%
select(Admin1, month, year, test_u5, test_ov5, conf_u5, conf_ov5) %>% # drop unwanted cols
drop_na(test_u5, conf_u5, test_ov5, conf_ov5) %>% #drop NAs
filter(test_u5>conf_u5,
test_ov5>conf_ov5) %>% #filter only rows where test cases are more than confirmed cases
mutate(Admin1 = case_when(Admin1 == 'Norteast Greenland National Park'~'Northeast Greenland National Park',
Admin1 == 'Kujaleq'~'Kujalleq',
Admin1 == 'sermersooq'~'Sermersooq',
TRUE~Admin1),
month = factor(month,
levels = month.abb),
year = case_when(year == 3018 ~ 2018,
year == 18 ~ 2018,
TRUE ~ 2018),
date_tested = make_date(year = year, month = month),
across(c(test_u5, test_ov5, conf_u5, conf_ov5),~as.integer(gsub("O",0,.))),
test_total = test_u5+test_ov5,
conf_total = conf_u5+conf_ov5) %>%
group_by(Admin1, date_tested)%>%
summarise(across(c(test_u5:conf_ov5,test_total,conf_total),sum))
View(clean_routine_data)
write_csv(clean_routine_data, paste0(maindir,'/data/clean_routine_data.csv'))
write_csv(clean_routine_data, paste0('/data/clean_routine_data.csv'))
write_csv(clean_routine_data, './clean_routine_data.csv') #save cleaned dataset
